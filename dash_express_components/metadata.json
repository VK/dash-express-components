{
  "src/lib/components/Configurator.react.js": {
    "description": "Configurator component",
    "displayName": "Configurator",
    "methods": [
      {
        "name": "update_config",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "new_config",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata the plotter selection is based on."
      },
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "Prop The resulting configuration of the plot."
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/Filter.react.js": {
    "description": "",
    "displayName": "Filter",
    "methods": [
      {
        "name": "handleClose",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleShow",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "update_config",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "new_config",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "filter_to_string",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "el",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_filter_blocks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "get_modal_blocks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "meta_out": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The metadata section will create as output."
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/Localstore.react.js": {
    "description": "",
    "displayName": "Localstore",
    "methods": [
      {
        "name": "getStore",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "saveStore",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "new_store",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleLoadClose",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleLoadShow",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "get_load_modal_blocks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "meta_out": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The metadata section will create as output."
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/MetaCheck.react.js": {
    "description": "",
    "displayName": "MetaCheck",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "meta_out": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The metadata section will create as output."
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/Parametrize.react.js": {
    "description": "",
    "displayName": "Parametrize",
    "methods": [
      {
        "name": "handleAddClose",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleAddShow",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "saveParams",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "new_parameters",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_add_modal_blocks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "update_config",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "path",
            "type": null
          },
          {
            "name": "value",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_parameter_options",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "path",
            "type": null
          },
          {
            "name": "options",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_parameter_col_options",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "path",
            "type": null
          },
          {
            "name": "col",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_manual_options",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "path",
            "type": null
          },
          {
            "name": "value",
            "type": null
          },
          {
            "name": "type",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_parameter_blocks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "meta_out": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The metadata section will create as output."
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/BarCount.react.js": {
    "description": "",
    "displayName": "BarCount",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/Box.react.js": {
    "description": "",
    "displayName": "Box",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/HistogramLine.react.js": {
    "description": "",
    "displayName": "HistogramLine",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/Imshow.react.js": {
    "description": "",
    "displayName": "Imshow",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/PlotterBase.react.js": {
    "description": "",
    "displayName": "PlotterBase",
    "methods": [
      {
        "name": "copy_params",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "typename",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "init_check_options",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "constructor",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "base_config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "preferSimple",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "o",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "setStateConfig",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "multiSelect",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "varname",
            "type": null
          },
          {
            "name": "options",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "singleSelect",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "varname",
            "type": null
          },
          {
            "name": "options",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "singleSelect_ExtraOption",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "varname",
            "type": null
          },
          {
            "name": "options",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "range_ManualInputArray",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "varname",
            "type": null
          },
          {
            "name": "option_varnames",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "range_ManualString",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "varname",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "toggleSelect",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          },
          {
            "name": "varname",
            "type": null
          },
          {
            "name": "options",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "toggle_single",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "bar_option",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "toggle_optionsbar",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "id",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "optionsBar",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "commonOptionBarControlls",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/Probability.react.js": {
    "description": "",
    "displayName": "Probability",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/Scatter.react.js": {
    "description": "",
    "displayName": "Scatter",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/ScatterMatrix.react.js": {
    "description": "",
    "displayName": "ScatterMatrix",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/Table.react.js": {
    "description": "",
    "displayName": "Table",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/plot/Violin.react.js": {
    "description": "",
    "displayName": "Violin",
    "methods": [
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/Plotter.react.js": {
    "description": "",
    "displayName": "Plotter",
    "methods": [
      {
        "name": "handleClose",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleShow",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "get_modal",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "meta_out": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The metadata section will create as output."
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/sub/Base.react.js": {
    "description": "",
    "displayName": "Base",
    "methods": [
      {
        "name": "update_meta_out",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "new_meta_out",
            "type": null
          },
          {
            "name": "constructor",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "update_config",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "new_config",
            "type": null
          },
          {
            "name": "constructor",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_columns",
        "docblock": "A helper to compute the column dropdown options based on the column metadata\r\nWe also filter continous and categorical variables, since some options only\r\nwork with one of them.\r\n@param meta \r\n@returns",
        "modifiers": [],
        "params": [
          {
            "name": "meta",
            "description": null,
            "type": null,
            "optional": false
          }
        ],
        "returns": null,
        "description": "A helper to compute the column dropdown options based on the column metadata\r\nWe also filter continous and categorical variables, since some options only\r\nwork with one of them."
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "meta_out": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The metadata section will create as output."
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/sub/CombinecatTransform.react.js": {
    "description": "",
    "displayName": "CombinecatTransform",
    "methods": [
      {
        "name": "config_to_string",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "el",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "eval",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/sub/EvalTransform.react.js": {
    "description": "",
    "displayName": "EvalTransform",
    "methods": [
      {
        "name": "config_to_string",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "el",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "eval",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/sub/MeltTransform.react.js": {
    "description": "",
    "displayName": "MeltTransform",
    "methods": [
      {
        "name": "config_to_string",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "el",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "eval",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/sub/SubComponentBase.js": {
    "description": "",
    "displayName": "SubComponentBase",
    "methods": [
      {
        "name": "setStateConfig",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "config_from_state",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "input",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "config_to_string",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "el",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "eval",
        "docblock": "use the config to compute a new transformed meta\r\n@param {} input \r\n@returns",
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "input"
          }
        ],
        "returns": null,
        "description": "use the config to compute a new transformed meta"
      },
      {
        "name": "get_dummy_meta_entry",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "type",
            "type": null
          },
          {
            "name": "value",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_col_or_median",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "el",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "allColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "All currently available column options"
      },
      "catColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available categorical options"
      },
      "numColOptions": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "Currently available numerical options"
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/Transform.react.js": {
    "description": "",
    "displayName": "Transform",
    "methods": [
      {
        "name": "handleClose",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleShow",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "update_config",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "new_config",
            "type": null
          },
          {
            "name": "constructor",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_transform_blocks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "get_modal_blocks",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "config": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The config the user sets in this component."
      },
      "meta": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any.isRequired"
        },
        "required": false,
        "description": "The metadata this section is based on."
      },
      "meta_out": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.any"
        },
        "required": false,
        "description": "The metadata section will create as output."
      },
      "setProps": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  }
}